<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
	xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<munit:config name="x-ce-location-implementation-flow-test-suite.xml" />
	<munit:test name="x-ce-location-implementation-flow-test-suite-x-ce-partners-get-partners-success-flowTest" doc:id="5b4473f5-30a7-42ab-b0fa-ce71803b6984" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Get Partners Mock" doc:id="facc7523-d9e0-4fff-9f04-632ade1cefb1" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Get Partners" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('sample_data/GetPartnerResponse.json')]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			
		</munit:behavior>
		<munit:execution >
			<ee:transform doc:name="Transform Message" doc:id="a45c9e1e-ed94-4039-804b-76f380780370" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
queryParams: {
	"franchise": "1234"
}]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<flow-ref doc:name="Flow-ref to x-ce-partners-get-partners-flow" doc:id="536a338f-2a3c-4052-bd18-57e2ef1f7bb1" name="x-ce-partners-get-partners-flow"/>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that doc:name="Assert that" doc:id="94d0ef78-49a6-485b-9adc-a07cc54120b8" message="The payload assertion is not correct" expression="#[payload.records[0].systemPartnerId]" is='#[MunitTools::equalTo("systemPartnerId" : "00001")]'/>
		</munit:validation>
	</munit:test>
	<munit:test name="x-ce-location-implementation-flow-test-suite-x-ce-partners-get-partners-failure-flowTest" doc:id="2b18456f-6bf4-406e-89c6-fb35ca3884bc" description="Test" ignore="true">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Get Partners Mock" doc:id="833a014e-2130-4232-b560-afc8b5646944" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="GET" attributeName="method" />
					<munit-tools:with-attribute whereValue="Get Partners" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="GET" attributeName="method" />
					<munit-tools:with-attribute whereValue="Get Partners" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="HTTP:BAD_REQUEST" />
				</munit-tools:then-return>
			
</munit-tools:mock-when>
			
		</munit:behavior>
		<munit:execution >
			<try doc:name="Try" doc:id="62de8fa9-febb-4769-b730-46cd456b114e" >
				<flow-ref doc:name="Flow-ref to x-ce-partners-get-partners-flow" doc:id="24858086-c0fd-491a-bf84-632d2b5755e5" name="x-ce-partners-get-partners-flow" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="726f2e60-7bca-4b9f-82a5-ee48e13b77f5" type="BAD_REQUEST">
						<set-payload value='#["BAD_REQUEST"]' doc:name="Set Payload" doc:id="4e81dc49-8fa1-4699-94b6-1f7c1011a034" />
					</on-error-continue>
				</error-handler>
			</try>
		
</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="7101cee7-6788-4e80-9f4c-75bbb32195a2" expression="#[payload]" is='#[MunitTools::equalToIgnoringCase("BAD_REQUEST")]'/>
		</munit:validation>
	
</munit:test>
<munit:test name="x-ce-location-implementation-flow-test-suite-x-ce-partners-get-partners-failure2-flowTest" doc:id="d547d237-0f88-4d3d-95fe-a27ffa43c5d6" description="Test" ignore="true">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Get Partners Mock" doc:id="f71a3d86-aa26-43e3-be6d-b7210d0163f5" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="GET" attributeName="method" />
					<munit-tools:with-attribute whereValue="Get Partners" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="GET" attributeName="method" />
					<munit-tools:with-attribute whereValue="Get Partners" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[payload]' mediaType="application/json" />
					<munit-tools:error typeId="HTTP:INTERNAL_SERVER_ERROR" />
				</munit-tools:then-return>
			
</munit-tools:mock-when>
			
		</munit:behavior>
		<munit:execution >
			<try doc:name="Try" doc:id="956a8e1e-419f-44ee-a680-5a114589515d" >
				<flow-ref doc:name="Flow-ref to x-ce-partners-get-partners-flow" doc:id="1bb2a4f4-038c-46ed-8192-b6f3f63915fb" name="x-ce-partners-get-partners-flow" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="34234872-a410-4b54-8837-6dd8a0fa2908" type="INTERNAL_SERVER_ERROR">
						<set-payload value='#["INTERNAL_SERVER_ERROR"]' doc:name="Set Payload" doc:id="3b7aa74f-e498-431f-a58d-a358aa63f4f2" />
					</on-error-continue>
				</error-handler>
			</try>
		
</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="7bf533b9-2387-4ca4-ad90-916d8bbb801e" expression="#[payload]" is='#[MunitTools::equalToIgnoringCase("INTERNAL_SERVER_ERROR")]'/>
		</munit:validation>
	
</munit:test>
	<munit:test name="x-ce-location-implementation-flow-test-suite-x-ce-partners-get-partners-partnerReference-Success-flowTest" doc:id="871f5166-91df-46eb-ad04-973fda88b04f" description="Test" ignore="true">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Get Partners-Pertner Reference Mock API" doc:id="70e0b8fa-37ec-4620-b38b-3baa40d4f2e1" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="GET" attributeName="method" />
					<munit-tools:with-attribute whereValue="Get Partners PartnerReference" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="GET" attributeName="method" />
					<munit-tools:with-attribute whereValue="Get Partners PartnerReference" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('sample_data/GetPartnerReferenceResponse.json')]" mediaType="#[application/json]"/>
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<ee:transform doc:name="Transform Message" doc:id="dabcf348-008e-4b8e-b304-19dfc2658002" >
				<ee:message >
					<ee:set-attributes ><![CDATA[%dw 2.0
output application/java
---
{
	uriParams: {
		"partnerReference": ""
	}
}]]></ee:set-attributes>
				</ee:message>
			</ee:transform>
			<flow-ref doc:name="Flow-ref to x-ce-partners-get-partners-partnerReference-flow" doc:id="719df39d-6489-44c6-8692-8340d5f9c101" name="x-ce-partners-get-partners-partnerReference-flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="16492b92-0e93-4023-8869-6346c8746c9b" expression="#[payload.systemPartnerId]" is='#[MunitTools::equalTo("systemPartnerId" : "00001")]'/>
		</munit:validation>
	</munit:test>
<munit:test name="x-ce-location-implementation-flow-test-suite-x-ce-partners-get-partners-partnerReference-Failure-flowTest"  description="Test" ignore="true">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Get Partners-Pertner Reference Mock" doc:id="d1def918-3c96-4148-bcc9-27f2850b2955" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="GET" attributeName="method" />
					<munit-tools:with-attribute whereValue="Get Partners PartnerReference" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="GET" attributeName="method" />
					<munit-tools:with-attribute whereValue="Get Partners PartnerReference" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="HTTP:BAD_REQUEST" />
				</munit-tools:then-return>
			
</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<try doc:name="Try" doc:id="1053f489-babf-463a-b3b7-99ff602912e1" >
				<flow-ref doc:name="Flow-ref to x-ce-partners-get-partners-partnerReference-flow" doc:id="3c218c8e-5808-41d5-9154-8c7c75cedc3b" name="x-ce-partners-get-partners-partnerReference-flow" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="fa43d80d-a125-4dfd-bb7a-6e3b89039285" type="BAD_REQUEST">
						<set-payload value='#["BAD_REQUEST"]' doc:name="Set Payload" doc:id="bf25c237-20d0-449e-bd36-53f603615e6f" />
					</on-error-continue>
				</error-handler>
			</try>
		
</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="bef6a080-6427-4966-835a-8c47b992626b" expression="#[payload]" is='#[MunitTools::equalToIgnoringCase("BAD_REQUEST")]'/>
		</munit:validation>
	
</munit:test>
<munit:test name="x-ce-location-implementation-flow-test-suite-x-ce-partners-get-partners-failure2-flowTest" doc:id="35212dbc-76d5-454a-820e-39d84918686d" description="Test" ignore="true">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Get Partners Mock" doc:id="55ba3bcd-74b5-4a81-80f3-2fd84d2a1167" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="GET" attributeName="method" />
					<munit-tools:with-attribute whereValue="Get Partners" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="GET" attributeName="method" />
					<munit-tools:with-attribute whereValue="Get Partners" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="HTTP:INTERNAL_SERVER_ERROR" />
				</munit-tools:then-return>
			
</munit-tools:mock-when>
			
		</munit:behavior>
		<munit:execution >
			<try doc:name="Try" doc:id="86cfd5ff-d7e4-4f64-a0e8-ae8995bffef0" >
				<flow-ref doc:name="Flow-ref to x-ce-partners-get-partners-flow" doc:id="c722995e-81dd-4562-9715-fc18d3227f45" name="x-ce-partners-get-partners-flow" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="300db59e-f256-458a-b5ea-13b773d984cd" type="INTERNAL_SERVER_ERROR">
						<set-payload value='#["INTERNAL_SERVER_ERROR"]' doc:name="Set Payload" doc:id="41677275-4e2a-4206-aca2-2e94eefd3731" />
					</on-error-continue>
				</error-handler>
			</try>
		
</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="503d9484-8e63-4d91-94fb-0c28a00aa8fb" expression="#[payload]" is='#[MunitTools::equalToIgnoringCase("INTERNAL_SERVER_ERROR")]'/>
		</munit:validation>
	
</munit:test>
	<munit:test name="x-ce-location-implementation-flow-test-suite-x-ce-location-put-partner-Success-flowTest" doc:id="735647db-436e-4843-bb77-35296c2f839b" description="Test" ignore="true">
		<munit:behavior >
			<munit-tools:mock-when doc:name="PUT Parteners Mock" doc:id="25385c65-d239-4a2e-9014-7bddad1fb17c" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="PUT" attributeName="method" />
					<munit-tools:with-attribute whereValue="Put Partners" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="PUT" attributeName="method" />
					<munit-tools:with-attribute whereValue="Put Partners" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('sample_data/Create_Partner_Response.json')]" mediaType="application/json"/>
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to x-ce-location-put-partner-flow" doc:id="003dd439-341a-415d-82bf-aceda991e19a" name="x-ce-location-put-partner-flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="f6f095d6-82e9-4873-9436-e429b9f0024a" expression="#[payload.systemPartnerId]" is='#[MunitTools::equalTo("systemPartnerId" : "00001")]'/>
		</munit:validation>
	</munit:test>
	<munit:test name="x-ce-location-implementation-flow-test-suite-x-ce-location-put-partner-Failure-flowTest" description="Test" ignore="true">
		<munit:behavior >
			<munit-tools:mock-when doc:name="PUT Partners Mock" doc:id="25a75d51-818f-4b17-a689-1726382d60c3" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="PUT" attributeName="method" />
					<munit-tools:with-attribute whereValue="Put Partners" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="PUT" attributeName="method" />
					<munit-tools:with-attribute whereValue="Put Partners" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="HTTP:BAD_REQUEST" />
				</munit-tools:then-return>
			
</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<try doc:name="Try" doc:id="076ed856-8fcf-4e92-88e5-7cf757b4e068" >
				<flow-ref doc:name="Flow-ref to x-ce-location-put-partner-flow" doc:id="24406aaa-4154-4f73-98df-5b1774c75011" name="x-ce-location-put-partner-flow" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="5344f42d-a445-4a22-a568-af01402dc0e1" type="BAD_REQUEST">
						<set-payload value='#["BAD_REQUEST"]' doc:name="Set Payload" doc:id="fc98b0af-c93a-4b4b-8eec-7dc612387f02" />
					</on-error-continue>
				</error-handler>
			</try>
		
</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="5a39e033-532a-46c5-93a8-ed27c6394ebc" expression="#[payload]" is='#[MunitTools::equalToIgnoringCase("BAD_REQUEST")]'/>
		</munit:validation>
	
</munit:test>
<munit:test name="x-ce-location-implementation-flow-test-suite-x-ce-partners-get-partners-failure2-flowTest" doc:id="53214a73-041b-47c6-8099-e7298e84a89d" description="Test" ignore="true">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Get Partners Mock" doc:id="869a8d35-ffc7-4f07-81f6-906a8e20f875" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="GET" attributeName="method" />
					<munit-tools:with-attribute whereValue="Get Partners" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="GET" attributeName="method" />
					<munit-tools:with-attribute whereValue="Get Partners" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="HTTP:INTERNAL_SERVER_ERROR" />
				</munit-tools:then-return>
			
</munit-tools:mock-when>
			
		</munit:behavior>
		<munit:execution >
			<try doc:name="Try" doc:id="8a1cb410-a54f-4553-8adc-e2f61640d51e" >
				<flow-ref doc:name="Flow-ref to x-ce-partners-get-partners-flow" doc:id="9b79c26d-5e95-4cc6-b791-b989dbeac3c7" name="x-ce-partners-get-partners-flow" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="8b80c1aa-a964-4c35-8568-4c06873fb4c7" type="INTERNAL_SERVER_ERROR">
						<set-payload value='#["INTERNAL_SERVER_ERROR"]' doc:name="Set Payload" doc:id="634abb0e-6e5a-41a1-b353-85ee0cb182b6" />
					</on-error-continue>
				</error-handler>
			</try>
		
</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="11dbccb7-5af7-4065-8237-e55f56c01736" expression="#[payload]" is='#[MunitTools::equalToIgnoringCase("INTERNAL_SERVER_ERROR")]'/>
		</munit:validation>
	
</munit:test>
	<munit:test name="x-ce-location-implementation-flow-test-suite-x-ce-location-post-partners-Success-flowTest" doc:id="47ebf75f-f876-4daf-80a5-ef1e266d6250" description="Test" ignore="true">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Post Partners Mock" doc:id="72475720-5b75-47aa-86b8-0150601ede52" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="POST" attributeName="method" />
					<munit-tools:with-attribute whereValue="Post Partners" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="POST" attributeName="method" />
					<munit-tools:with-attribute whereValue="Post Partners" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('sample_data/Create_Partner_Response.json')]" mediaType="application/json"/>
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to x-ce-location-post-partners-flow" doc:id="a39d96a1-9cbf-453a-be43-6d3b04f79128" name="x-ce-location-post-partners-flow"/>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that doc:name="Assert that" doc:id="d3a2107d-eb64-4ac6-8111-36d011841368" expression="#[payload.systemPartnerId]" is='#[MunitTools::equalTo("systemPartnerId" : "00001")]'/>
		</munit:validation>
	</munit:test>
<munit:test name="x-ce-location-implementation-flow-test-suite-x-ce-location-post-partners-Failure-flowTest" description="Test" ignore="true">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Post Partners Mock" doc:id="bee7fd25-ff09-453e-b295-211907e24613" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="POST" attributeName="method" />
					<munit-tools:with-attribute whereValue="Post Partners" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="POST" attributeName="method" />
					<munit-tools:with-attribute whereValue="Post Partners" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="HTTP:BAD_REQUEST" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<try doc:name="Try" doc:id="357b33d4-b436-4cea-8add-00343b82d864" >
				<flow-ref doc:name="Flow-ref to x-ce-location-post-partners-flow" doc:id="05af4963-3e5c-4b23-a1b8-ee7482036a2e" name="x-ce-location-post-partners-flow" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="6949d670-07e0-46bb-aa9e-b10bea68492a" type="BAD_REQUEST">
						<set-payload value='#["BAD_REQUEST"]' doc:name="Set Payload" doc:id="1d8436f5-2f24-4228-a07a-4ea6cf0cc864" />
					</on-error-continue>
				</error-handler>
			</try>
		
</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="9905bfa9-d4bf-44fe-927c-c4b0dbd3f627" expression="#[payload]" is='#[MunitTools::equalToIgnoringCase("BAD_REQUEST")]'/>
		</munit:validation>
	
</munit:test>
<munit:test name="x-ce-location-implementation-flow-test-suite-x-ce-partners-get-partners-failure2-flowTest" doc:id="1368f4f1-3977-4511-a61c-986131fd6af4" description="Test" ignore="true">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Get Partners Mock" doc:id="87ee9a1d-e82f-44ad-be88-13110caa629f" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="GET" attributeName="method" />
					<munit-tools:with-attribute whereValue="Get Partners" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="GET" attributeName="method" />
					<munit-tools:with-attribute whereValue="Get Partners" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="HTTP:INTERNAL_SERVER_ERROR" />
				</munit-tools:then-return>
			
</munit-tools:mock-when>
			
		</munit:behavior>
		<munit:execution >
			<try doc:name="Try" doc:id="a698c500-b8c7-49d9-8342-5d2230ebe090" >
				<flow-ref doc:name="Flow-ref to x-ce-partners-get-partners-flow" doc:id="34af0f08-de49-4911-b236-d89d27277764" name="x-ce-partners-get-partners-flow" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="3b23d3d7-916a-4324-82bf-77f8414c0ff7" type="INTERNAL_SERVER_ERROR">
						<set-payload value='#["INTERNAL_SERVER_ERROR"]' doc:name="Set Payload" doc:id="40d58194-2f14-417b-8366-be97c6f19888" />
					</on-error-continue>
				</error-handler>
			</try>
		
</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="ebe7ee0c-e265-4756-b604-77a7ccfdb5e7" expression="#[payload]" is='#[MunitTools::equalToIgnoringCase("INTERNAL_SERVER_ERROR")]'/>
		</munit:validation>
	
</munit:test>

</mule>
